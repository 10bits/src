# Build a test APK for Kiwi Browser

name: Build APK

# Controls when the action will run. Triggers the workflow on push or pull request events
on:
  push:
    paths-ignore:
      - '*.md'
    branches: [ master ]
  pull_request:
    paths-ignore:
      - '*.md'
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    # /dev/sda1 has more available space than /dev/sdb1 (14 GB only on /dev/sdb1 at this stage)
    # so we want to take advantage of the available disk space on /dev/sda1
      
    # We store the main repository on /dev/sda1
    # We store the dependencies and output objects on /dev/sdb1 
    steps:
      - name: Checking available disk-space again
        run: df -h

      - name: Checking available disk-space again
        run: ls -la /mnt

      - name: Reclaiming disk space on /dev/sda1 by disabling swap partition
        run: |
          sudo swapoff -av
          sudo rm -f /swapfile

      - name: Checking available disk-space again
        run: df -h

      - name: Creating secondary disk folder in /dev/sdb1
        run: |
          sudo mkdir -p /mnt/secondary_disk
          sudo chown -R runner:docker /mnt/secondary_disk

      - name: Checking available disk-space again
        run: ls -la /mnt
        
      - name: Running symlink on /dev/sdb1 pointing to /dev/sda1
        run: ln -s /mnt/secondary_disk $GITHUB_WORKSPACE/

      - name: Checking available disk-space again
        run: df -h

      - name: Gathering CIPD from cache
        id: cache-cipd
        uses: actions/cache@v1
        with:
          path: ./secondary_disk/.cipd
          key: ${{ runner.os }}-cipd

      - name: Checking-out CIPD dependencies in $GITHUB_WORKSPACE/.cipd
        uses: actions/checkout@v2
        if: steps.cache-cipd.outputs.cache-hit != 'true'
        with:
          repository: kiwibrowser/dependencies
          path: ./secondary_disk/.cipd 
          
      - name: Linking .cipd in the proper path and copying .gclient and .gclient_entries
        run: |
          ln -s $GITHUB_WORKSPACE/./secondary_disk/.cipd/ .
          cp ./.cipd/.gclient .
          cp ./.cipd/.gclient_entries .

      - name: Checking available disk-space again
        run: df -h

      - name: Installing Python and OpenJDK
        run: sudo apt-get install python openjdk-8-jdk-headless libncurses5
        
      - name: Checking available disk-space again
        run: df -h

      - name: Setting-up Java 8 as default Java provider
        run: sudo update-java-alternatives --set java-1.8.0-openjdk-amd64

      - name: Checking available disk-space
        run: df -h

      - name: Checking available disk-space again
        run: df -h
        
      - name: Checking available disk-space again
        run: df -h /mnt
        
      - name: Checking available disk-space again
        run: df -h /home
        
      - name: Checking available disk-space again
        run: df -h ./secondary_disk

      - name: Checking available disk-space again workspace
        run: df -h $GITHUB_WORKSPACE

      - name: Checking-out source-code
        uses: actions/checkout@v2

      - name: Checking available disk-space again
        run: df -h
        
      - name: Checking available disk-space again
        run: df -h /mnt
        
      - name: Checking available disk-space again
        run: df -h /home
        
      - name: Checking available disk-space again
        run: df -h ./secondary_disk

      - name: Checking available disk-space again workspace
        run: df -h $GITHUB_WORKSPACE

      - name: Installing system dependencies
        working-directory: ./src
        run: |
          sudo bash install-build-deps.sh --no-chromeos-fonts
          build/linux/sysroot_scripts/install-sysroot.py --arch=i386
          build/linux/sysroot_scripts/install-sysroot.py --arch=amd64
          
      - name: Checking available disk-space one more time
        run: df -h

      - name: Creating output folder
        run: mkdir -p secondary_disk/out/android_arm
      
      - name: Generating one-time APK signature key
        run: keytool -genkey -v -keystore keystore.jks -alias dev -keyalg RSA -keysize 2048 -validity 10000 -storepass public_password -keypass public_password -dname "cn=Kiwi Browser (unverified), ou=Actions, o=Kiwi Browser, c=GitHub"

      - name: Copying args.gn to target folder
        run: cp src/.build/android_arm/args.gn secondary_disk/out/android_arm/

      - name: Downloading depot_tools
        working-directory: ./secondary_disk
        run: git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
        
      - name: Adding depot_tools to path
        run: echo "::add-path::$GITHUB_WORKSPACE/secondary_disk/depot_tools"
      
      - name: Running gclient runhooks
        working-directory: ./src
        run: gclient runhooks
      
      - name: Generating build files
        working-directory: ./src
        run: gn gen ../secondary_disk/out/android_arm

      - name: Building APK
        working-directory: ./src
        run: ninja -C ../secondary_disk/out/android_arm chrome_public_apk
