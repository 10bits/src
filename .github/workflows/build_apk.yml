# Build a test APK for Kiwi Browser

name: Build APK

# Controls when the action will run. Triggers the workflow on push or pull request events
on:
  push:
    paths-ignore:
      - '*.md'
    branches: [ master ]
  pull_request:
    paths-ignore:
      - '*.md'
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Reclaiming disk space by disabling swap partition
        run: |
          sudo swapoff -av
          sudo rm -f /swapfile

      - name: Creating worker space
        run: |
          sudo mkdir -p /work
          sudo chown -R runner:docker /work

      - name: Running symlink
        run: ln -s /repository $GITHUB_WORKSPACE/repository

      - name: Gathering CIPD from cache
        id: cache-cipd
        uses: actions/cache@v1
        with:
          path: ./repository/.cipd
          key: ${{ runner.os }}-cipd

      - name: Checking-out CIPD dependencies
        uses: actions/checkout@v2
        if: steps.cache-cipd.outputs.cache-hit != 'true'
        with:
          repository: kiwibrowser/dependencies
          path: ./repository/.cipd 

      - name: Installing Python and OpenJDK
        run: sudo apt-get install python openjdk-8-jdk-headless libncurses5
    
      - name: Setting-up Java 8 as default Java provider
        run: sudo update-java-alternatives --set java-1.8.0-openjdk-amd64

      - name: Checking available disk-space
        run: df -h

      - name: Checking-out source-code
        uses: actions/checkout@v2
        with:
          path: ./repository/src 

      - name: Checking available disk-space again
        run: df -h

      - name: Installing system dependencies
        env:
          working-directory: ./repository/src
        run: |
          sudo bash install-build-deps.sh --no-chromeos-fonts
          build/linux/sysroot_scripts/install-sysroot.py --arch=i386
          build/linux/sysroot_scripts/install-sysroot.py --arch=amd64


